mongoDB 

- is a NoSQL Database
- no relational Database -> its a document database
- recommended, if there is one user generating many posts etc. like Instagram and so one..

1. REFRESH IP -> https://cloud.mongodb.com/v2/6376945c84680d511f6cba8f#security/network/accessList
2. CONNECT -> https://cloud.mongodb.com/v2/6376945c84680d511f6cba8f#clusters -> CONNECT BUTTON -> CONNECT WITH APP 
3. CONNECT WITH MONGODB COMPASS -> THE APP 


__________________________________________________

                  THEORY
      
- NoSQL Database is using COLLECTIONS
             |
          Documents
          { name: 'Max'. age: 28 }
          { name: 'Paul' }              => Documents with different structure in the same Document
          
- Does not have a strict Data Shema (No Structure required)
- No Data Relations


Horizontal vs Vertical Scaling

- NoSQL is really good with horizontal scaling

__________________________________________________



                  CRUD  DOCS Overview            https://www.mongodb.com/docs/manual/crud/

CREATE
db.collection.insertOne({}) -> will create One element
db.collection.insertMany({}) -> will create many element

READ
db.collection.find()


UPDATE
db.collection.updateOne() -> will update one element
db.collection.updateMany() -> will update multiple elements

DELETE
db.collection('products').deleteOne();
db.collection('products').deleteMany({});


EXAMPLE:
dbOp = db.collection('prodcuts').updateOne({ _id: new mongodb.ObjectId(this._id) }, { $set: this });
                                                                                          ↑
                                                                                    DESCRIPE THE OPERATION we want to make
                                                                                    
                                                                                    
$set  The $set operator replaces the value of a field with the specified value.
$in   is a query operator -> Matches any of the values specified in an array.

__________________________________________________


                  MONGOOSE

- Mongoose is the same for MongoDb like Sequelize for MySQL
- tries to enable to work with the data instead of the queries
- Is an ODM  a Object-Document Mapping Library


Integration:

const mongoose = require('mongoose');

const Schema = mongoose.Schema;      // = a constructor

const productSchema = new Schema({  // Schema Object
  // we discribe the data-schema, how the product should look like -> with key-value pairs!
  // KEYS  TYPE  (= PAIR)
  // ↓      ↓
  title: {type: String, required: true},  // here we create an type Object cause of the {}              
  price: {type: Number, required: true},
  description: {type: String, required: true},
  imageUrl: {type: String, required: true}
});   

CRUD by mongoose

C
R
U
D .findByIdAndRemove(prodId)           // "delete by mongoose"


.select()       ->
.populate()     ->
.method         -> userSchema.methods.addToCart = function() {     with .methods (Object) allows us to add our own methods, by simply adding them

                                                                                    
                                                                                   
